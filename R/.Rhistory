source('/home/job/gits/customscripts/R/diffexp.R')
source('/home/job/gits/customscripts/R/diffexp2gsea.R')
defile = '/home/job/WORKSPACE/PROJECTS/B21087_FAME_01_SERVIER_MOSCATO_V3/JOB/ANALYSIS_V3/RESULTS/WP1/H/Differential_analysis/adjp.0.05_lfc.1/~0+TP53_status/mut_vs_wt/mut_vs_wt_results.txt'
out.dir = '/home/job/WORKSPACE/PROJECTS/B21087_FAME_01_SERVIER_MOSCATO_V3/JOB/ANALYSIS_V3/RESULTS/WP1/H/Differential_analysis/adjp.0.05_lfc.1/~0+TP53_status/mut_vs_wt'
comp.name <- basename(dirname(defile))
# ##################
# #### EXAMPLES ####
# ##################
#
# ## Setting variables
# defile <- '/home/job/WORKSPACE/B21002_DELE_01/B21002_DELE_01_dge/DGE/GSEAapp/Macrophage_type_compairing_Proinf_vs_Basal/Macrophage_type_compairing_Proinf_vs_Basal_complete.tsv'
# out.dir <- dirname(defile)
# comp.name <- basename(dirname(defile))
species <- 'Homo sapiens'
my.seed <- 1337L
lfc.min <- 1
de.min.p <- 5E-02
enr.min.p <- 5E-02
enr.min.genes <- 10
topN <- 100
# comp.name <- basename(dirname(defile))
# species <- 'Homo sapiens'
# my.seed <- 1337L
# lfc.min <- 1
# de.min.p <- 5E-02
# enr.min.p <- 5E-02
# enr.min.genes <- 10
# topN <- 100
#
# ## PREPARING INPUT (from a '*_complete.tsv' output table from our 'rna-salmon-deseq2' pipeline)
enr.inputs <- pipe2enr(deseq2.res.file = defile, species = species, geneid.colname = 'Gene_Name', geneid.type = 'SYMBOL', value.colname = 'stat_change', topN.max = topN, topN.order.colname = 'Adjusted_PValue', topN.order.decreasing = FALSE, topN.cutoff = de.min.p, topN.keep.operator = '<')
# comp.name <- basename(dirname(defile))
# species <- 'Homo sapiens'
# my.seed <- 1337L
# lfc.min <- 1
# de.min.p <- 5E-02
# enr.min.p <- 5E-02
# enr.min.genes <- 10
# topN <- 100
#
# ## PREPARING INPUT (from a '*_complete.tsv' output table from our 'rna-salmon-deseq2' pipeline)
enr.inputs <- pipe2enr(deseq2.res.file = defile, species = species, geneid.colname = 'Symbol', geneid.type = 'SYMBOL', value.colname = 'log2FoldChange', topN.max = topN, topN.order.colname = 'padj', topN.order.decreasing = FALSE, topN.cutoff = de.min.p, topN.keep.operator = '<')
## DO (Disease Ontology), NCG (Network of Cancer Genes), DGN (DisGeNET)
### WARNING : ONLY FOR 'Homo sapiens' !
### GSEA
for (x in c('DOSE::gseDO', 'DOSE::gseNCG', 'DOSE::gseDGN')) {
my.gsea.res <- gsea.run(geneList = enr.inputs$gsea.genevec, species = species, func.name = x, t2g = NULL, t2g.name = NULL, gene2Symbol = enr.inputs$gene2Symbol, seed = my.seed, pvalueCutoff = enr.min.p, minGSSize = enr.min.genes)
gsea.output(gseaResult = my.gsea.res, out.dir = out.dir, comp.name = comp.name)
}
### INPUT : dir
data_dir <- paste0(root_dir, '/DATA')
## Dirs
### Main rootname for dirs
root_dir <- '/home/job/WORKSPACE/PROJECTS/B23025_MIBO_01_RT09722_GeoMx/'
### INPUT : dir
data_dir <- paste0(root_dir, '/DATA')
### INPUT : filename (MS XLSX)
data_filename <- 'RT09722_TestRun_BGsub_BC_geomean_20230414.xlsx'
### Results output dir
out_dir <- paste0(root_dir, '/RESULTS')
### ANNOTATION : dir
annot_dir <- paste0(root_dir, '/gitlab/B23025_MIBO_01/annotation/')
### ANNOTATION : filename (MS XLSX)
annot_filename <- 'ROI_GeoMx_RT09722_REFORMATED_20230501.xlsx'
work_dir <- paste0(out_dir, '/', analysis_name, '_', format(Sys.time(), '%Y%m%d%H%M%S'))
### Analysis tag name
# analysis_name <- 'B23025_MIBO_01_RT09722_GeoMx'
analysis_name <- 'My_analysis'
work_dir <- paste0(out_dir, '/', analysis_name, '_', format(Sys.time(), '%Y%m%d%H%M%S'))
## Sourcing outside scripts
source('/home/job/gits/customscripts/R/HTG_analysis_functions.R')
source('/home/job/gits/customscripts/R/diffexp_design.R')
source('/home/job/gits/customscripts/R/diffexp2gsea.R')
## Loading data
geo_df <- readxl::read_excel(path = paste(c(data_dir, data_filename), collapse = '/'), sheet = 'TargetCountMatrix', na = c('', 'na', 'NA'))
## Loading annotations
annot_df <- readxl::read_excel(path = paste(c(annot_dir, annot_filename), collapse = '/'), na = c('', 'na', 'NA'))
geo_int <- as.matrix(geo_df[,-1])
### Sort data by ROI/AOI names
geo_int <- geo_int[, order(colnames(geo_int))]
### Sort annotation by ROI/AOI names
annot_df <- annot_df[order(annot_df$SegmentDisplayName),]
### Restrict data
geo_int <- geo_int[,colnames(geo_int) %in% annot_df$SegmentDisplayName]
### Restrict annotation
annot_df <- annot_df[annot_df$SegmentDisplayName %in% colnames(geo_int),]
### Check
all(colnames(geo_int) == annot_df$SegmentDisplayName)
annot_sn
### ANNOTATION : sample names column
annot_sn <- 'SegmentDisplayName'
geo_df <- readxl::read_excel(path = paste(c(data_dir, data_filename), collapse = '/'), sheet = 'TargetCountMatrix', na = c('', 'na', 'NA'))
## Loading annotations
annot_df <- readxl::read_excel(path = paste(c(annot_dir, annot_filename), collapse = '/'), na = c('', 'na', 'NA'))
## Synch
### Convert counts df to matrix
geo_int <- as.matrix(geo_df[,-1])
### Sort data by ROI/AOI names
geo_int <- geo_int[, order(colnames(geo_int))]
### Sort annotation by ROI/AOI names
annot_df <- annot_df[order(annot_df[[annot_sn]]),]
### Restrict data
geo_int <- geo_int[,colnames(geo_int) %in% annot_df[[annot_sn]]]
### Restrict annotation
annot_df <- annot_df[annot_df[[annot_sn]] %in% colnames(geo_int),]
### Check
all(colnames(geo_int) == annot_df[[annot_sn]])
my_des <- full_design_generator(init_df = annot_df[,c(annot_sn, diff_categs)], samples_colname = annot_sn, covar_colnames = NULL, add_inverted = TRUE, add_others = TRUE, only_others = FALSE)
### Vector of annotation column names to assess as putative discrete covariates
diff_categs <- c(
'AOI_Type'
, 'SegmentLabel'
)
my_des <- full_design_generator(init_df = annot_df[,c(annot_sn, diff_categs)], samples_colname = annot_sn, covar_colnames = NULL, add_inverted = TRUE, add_others = TRUE, only_others = FALSE)
str(my_des)
write.table(x = my_des, file = '~/design_example.tsv', quote = FALSE, row.names = FALSE, sep = '\t')
toto = readRDS('~/WORKSPACE/PROJECTS/B23019_BAPI_01_ICARUS_BREAST01_WES.RNAseq/ANALYSIS/TDayris/txi.DGE_considering_factor_Status_Response_comparing_test_ON_TREATMENT_Partial_Response_vs_reference_BASELINE_Partial_Response.RDS')
str(toto)
names(toto)
str(toto$abundance)
str(toto$counts)
str(toto$infReps)
str(toto$infReps[[1]])
str(toto$infReps[[1]][1:10,1:5])
toto$infReps[[1]][1:10,1:5]
toto$infReps = NULL
saveRDS(toto, '~/WORKSPACE/PROJECTS/B23019_BAPI_01_ICARUS_BREAST01_WES.RNAseq/ANALYSIS/TDayris/txi.DGE_considering_factor_Status_Response_comparing_test_ON_TREATMENT_Partial_Response_vs_reference_BASELINE_Partial_Response_cut.RDS', compress = 'bzip2')
str(toto)
toto = readRDS('~/WORKSPACE/PROJECTS/B23019_BAPI_01_ICARUS_BREAST01_WES.RNAseq/ANALYSIS/TDayris/txi.DGE_considering_factor_Status_comparing_test_ON_TREATMENT_vs_reference_BASELINE.RDS')
object.size(toto)
toto$infReps = NULL
object.size(toto)
saveRDS(toto, '~/WORKSPACE/PROJECTS/B23019_BAPI_01_ICARUS_BREAST01_WES.RNAseq/ANALYSIS/TDayris/txi.DGE_considering_factor_Status_comparing_test_ON_TREATMENT_vs_reference_BASELINE_cut.RDS', compress = 'bzip2')
dim(toto$counts)
str(toto$counts)
titi = data.table::fread(file = '~/WORKSPACE/PROJECTS/B23019_BAPI_01_ICARUS_BREAST01_WES.RNAseq/ANALYSIS/TDayris/data_output/Quantification/Raw.genes.tsv')
dim(titi)
str(titi)
timat <- as.matrix(titi[,-c(1, ncol(titi))])
str(timat)
ncol(titi)
str(titi[,-c(1, ncol(titi))])
dim(titi)
dim(titi[,])
dim(titi[,-c(1,44)])
ncol(titi)
dim(titi[,-c(1,ncol(titi))])
c(1,ncol(titi))
-c(1,ncol(titi))
str(titi[,])
dim(titi[,])
dim(titi[,-1])
dim(titi[,-44])
dim(titi[,c(-1,-44)])
dim(titi[,c(-1,-ncol(titi))])
ncol(titi)
-ncol(titi)
timat <- as.matrix(titi[,2:42])
str(timat)
rownames(timat) <- setNames(object = titi$target_id, nm = titi$Hugo_ID)
str(timat)
saveRDS(timat,'~/WORKSPACE/PROJECTS/B23019_BAPI_01_ICARUS_BREAST01_WES.RNAseq/ANALYSIS/TDayris/data_output/Quantification/Counts_gene.RDS', compress = 'bzip2')
range(timat)
